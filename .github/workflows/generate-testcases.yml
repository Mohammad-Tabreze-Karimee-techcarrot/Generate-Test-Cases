name: Two-Stage AI Test Case Generation

on:
  push:
    paths:
      - 'projects/**/input/BRD/*.docx'
      - 'projects/**/input/BRD/*.pdf'
      - 'projects/**/input/Figma/*.pdf'
      - 'generate_testcases.py'
      - '.github/workflows/testcase-generation.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Clean and reinstall dependencies
        run: |
          echo "üßπ Removing preinstalled packages..."
          pip uninstall -y anthropic anthropic-sdk openai httpx httpcore || true
          pip cache purge || true

          echo "üì¶ Installing stable versions..."
          pip install --upgrade pip
          pip install --force-reinstall --no-cache-dir \
            anthropic==0.16.0 \
            openai==1.54.0 \
            python-docx \
            python-dotenv \
            PyMuPDF

          echo "‚úÖ Dependency installation completed."

      - name: Verify installations
        run: |
          echo "üîç Verifying imports..."
          python -c "import anthropic; print('‚úÖ Anthropic working version:', anthropic.__version__)"
          python -c "import openai; print('‚úÖ OpenAI working version:', openai.__version__)"
          python -c "import fitz; print('‚úÖ PyMuPDF import OK')"
          python -c "import docx; print('‚úÖ python-docx import OK')"

      - name: Generate test cases (Two-Stage AI)
        env:
          PYTHONPATH: ${{ github.workspace }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "üöÄ Starting test case generation..."
          echo "‚è∞ Started at: $(date)"
          python generate_testcases.py
          EXIT_CODE=$?
          echo "‚è∞ Finished at: $(date)"
          if [ $EXIT_CODE -ne 0 ]; then
            echo "‚ùå Test case generation failed with exit code: $EXIT_CODE"
            exit $EXIT_CODE
          fi
          echo "‚úÖ Test case generation completed successfully"

      - name: Upload logs as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generation-logs
          path: testcase_generation.log
          retention-days: 30

      - name: Commit and push generated files
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action Bot"
          git add projects/*/output/**/*.md || true
          if git diff --staged --quiet; then
            echo "‚ÑπÔ∏è No changes to commit"
          else
            git commit -m "ü§ñ Two-Stage AI: Generated test cases [skip ci]"
            git push
          fi
